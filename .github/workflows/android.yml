name: Upload APK
on:
  workflow_dispatch:
    inputs:
      buildType:
        description: 'Build Type'
        required: true
        default: 'staging'
        type: choice
        options:
          - staging
          - release
          - product
      fileType:
        description: 'Build APK?'
        required: true
        default: true
        type: boolean

jobs:
  Build-AND-Upload:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v2
      - uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: '11'

      - name: Prepare Env
        run: |
          mkdir keystore
      - run: cd . > keystore/configs.properties
      - run: cd . > keystore/easywallet.jks
      - run: echo ${{ secrets.CONFIGS }} | base64 -i --decode > keystore/configs.properties
      - run: echo ${{ secrets.JKS_SIGNER }} | base64 -i --decode > keystore/easywallet.jks
      - run: echo ${{ secrets.GIT_TOKEN }} | base64 -i --decode >> local.properties

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2
        with:
          gradle-version: 7.4

      - name: Build APK
        env:
          IS_DEBUG: ${{ contains(github.event.inputs.buildType, 'staging') }}
          IS_APK: ${{ github.event.inputs.fileType }}
        run: |
          if ${IS_DEBUG} == true; then
            if ${IS_APK} == true; then
              echo "apk_path=app/build/outputs/apk/debug/app-debug.apk" >> $GITHUB_ENV
              ./gradlew assembleDebug
            else
              echo "apk_path=app/build/outputs/bundle/debug/app-debug.aab" >> $GITHUB_ENV
              ./gradlew bundleDebug
            fi
          else
            if ${IS_APK} == true; then
              echo "apk_path=app/build/outputs/apk/release/app-release.apk" >> $GITHUB_ENV
              ./gradlew assembleRelease
            else
              echo "apk_path=app/build/outputs/bundle/release/app-release.aab" >> $GITHUB_ENV
              ./gradlew bundleRelease
            fi
          fi

      - name: Upload APK To Firebase App Distribution
        uses: wzieba/Firebase-Distribution-Github-Action@v1.3.2
        with:
          appId: ${{secrets.FIREBASE_APP_ID}}
          token: ${{secrets.FIREBASE_TOKEN}}
          groups: tester
          file: ${{ env.apk_path }}

      - name: Bump version and push tag
        id: tag_version
        uses: mathieudutour/github-tag-action@v6.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
      - name: Create a GitHub release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ steps.tag_version.outputs.new_tag }}
          name: Release ${{ steps.tag_version.outputs.new_tag }}
          body: ${{ steps.tag_version.outputs.changelog }}

      - name: Send Slack notification
        if: always()
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_COLOR: ${{ job.status }}
          SLACK_MESSAGE: 'Build ${{ job.status }}'
          SLACK_WEBHOOK: ${{ secrets.OUR_SLACK_WEBHOOK_URL }}
          SLACK_FOOTER: 'EasyWallet'
          SLACK_ICON: https://avatars.githubusercontent.com/u/25579672?v=4
          SLACK_USERNAME: BreakZero